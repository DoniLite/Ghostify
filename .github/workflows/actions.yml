name: Deno CD/CI Workflow
run-name: ${{ github.actor }}'s Deno CI/CD Pipeline

env:
  DENO_DIR: ~/.cache/deno

on:
  push:
    branches:
      - main
      - develop
      - "releases/**"
    tags:
      - v2
      - "v1.*"
  pull_request:
    branches:
      - main
      - develop
  schedule:
    - cron: "30 5 * * 1-4" # Runs at 05:30 AM Mon-Thu

jobs:
  deno-backend-ci:
    name: Build and Test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        deno-version: ["2.x"]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: ${{ matrix.deno-version }}

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.DENO_DIR }}
          key: ${{ runner.os }}-deno-${{ hashFiles('deno.lock') }}
          restore-keys: |
            ${{ runner.os }}-deno-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: deno install --reload --lock=deno.lock --frozen=true --allow-scripts

      - name: Generate Prisma Types
        run: deno task prisma:generate

      - name: Lint Code
        run: deno lint --ignore="**/*.js"

      - name: Run Tests
        run: deno task test-ci

      - name: Build Project
        run: deno task build:preview

      - name: Prepare Artifacts
        run: mkdir -p dist

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ghostify-client-preview
          path: dist/
          retention-days: 1

  deploy-preview:
    name: Deploy Preview
    needs: deno-backend-ci
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: ghostify-client-preview
          path: ./dist

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        with:
          path: ./dist

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
