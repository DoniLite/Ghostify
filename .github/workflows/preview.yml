name: Ghostify Preview Deployment

on:
  push:
    branches:
      - main
      - develop
      - "octocat/**"
      - "releases/**"

jobs:
  check-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pages: write
      id-token: write
      actions: read

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Wait for artifact to be available
        id: wait-artifact
        run: |
          echo "Waiting for artifact 'ghostify-client-preview' to be available..."
          max_attempts=30
          attempt=1
          
          while [ $attempt -le $max_attempts ]; do
            echo "Attempt $attempt/$max_attempts"
            
            # Check if artifact exists using GitHub API
            artifact_response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts")
            
            # Also check recent workflow runs for the same commit
            runs_response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/actions/runs?head_sha=${{ github.sha }}&status=completed&conclusion=success")
            
            # Extract run IDs from successful runs
            run_ids=$(echo "$runs_response" | jq -r '.workflow_runs[].id')
            
            for run_id in $run_ids; do
              artifacts=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                "https://api.github.com/repos/${{ github.repository }}/actions/runs/$run_id/artifacts")
              
              artifact_found=$(echo "$artifacts" | jq -r '.artifacts[] | select(.name=="ghostify-client-preview") | .name')
              
              if [ "$artifact_found" = "ghostify-client-preview" ]; then
                echo "Artifact found in run $run_id!"
                echo "artifact_run_id=$run_id" >> $GITHUB_OUTPUT
                echo "artifact_found=true" >> $GITHUB_OUTPUT
                exit 0
              fi
            done
            
            echo "Artifact not found, waiting 30 seconds..."
            sleep 30
            attempt=$((attempt + 1))
          done
          
          echo "Artifact not found after $max_attempts attempts"
          echo "artifact_found=false" >> $GITHUB_OUTPUT
          exit 1

      - name: Download artifact
        if: steps.wait-artifact.outputs.artifact_found == 'true'
        uses: actions/download-artifact@v4
        with:
          name: ghostify-client-preview
          path: ./dist
          run-id: ${{ steps.wait-artifact.outputs.artifact_run_id }}

      - name: Verify artifact contents
        if: steps.wait-artifact.outputs.artifact_found == 'true'
        run: |
          echo "Contents of dist directory:"
          ls -la ./dist/
          if [ -z "$(ls -A ./dist)" ]; then
            echo "Error: Artifact directory is empty"
            exit 1
          fi

      - name: Setup Pages
        if: steps.wait-artifact.outputs.artifact_found == 'true'
        uses: actions/configure-pages@v4

      - name: Upload artifact for Pages
        if: steps.wait-artifact.outputs.artifact_found == 'true'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

      - name: Deploy to GitHub Pages
        if: steps.wait-artifact.outputs.artifact_found == 'true'
        id: deployment
        uses: actions/deploy-pages@v4