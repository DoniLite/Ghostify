# .github/workflows/preview.yml
name: Ghostify Preview Deployment

on:
  workflow_run:
    workflows: ["Deno CD/CI Workflow"]
    types:
      - completed
    branches:
      - main
      - develop

# Ensure the workflow only runs if ALL preceding workflows were successful
# You might need to adjust this logic based on which specific jobs you want to gate on.
# For simplicity, this example assumes the workflows are the gatekeepers.
jobs:
  check_workflow:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Check workflow status
        run: |
          if [ "${{ github.event.workflow_run.conclusion }}" != "success" ]; then
            echo "Previous workflow did not succeed"
            exit 1
          fi

  deploy-preview:
    needs: check_workflow
    runs-on: ubuntu-latest

    permissions:
      pages: write # Required to deploy to GitHub Pages
      id-token: write # Required for OpenID Connect (OIDC) authentication
      actions: read # Required to download artifacts from previous workflow

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download artifact from previous workflow
        uses: actions/github-script@v7
        with:
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.payload.workflow_run.id
            });
            const matchArtifact = artifacts.data.artifacts.find(
              artifact => artifact.name === "ghostify-client-preview"
            );
            const download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: matchArtifact.id,
              archive_format: 'zip'
            });
            const fs = require('fs');
            fs.writeFileSync('artifact.zip', Buffer.from(download.data));
      
      - name: Unzip artifact
        run: |
          mkdir -p dist
          unzip artifact.zip -d dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          folder: dist
          branch: ghostify-preview