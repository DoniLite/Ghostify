// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Contact {
  id      Int     @id @default(autoincrement())
  email   String  @unique
  name    String?
  message String?
}

model Category {
  id    Int    @id @default(autoincrement())
  title String @unique
  post  Post[]
}

model PostSection {
  id      Int    @id @default(autoincrement())
  parent  Post   @relation(fields: [postId], references: [id])
  postId  Int
  title   String
  content String
}

model Comment {
  id      Int      @id @default(autoincrement())
  post    Post?    @relation(fields: [postId], references: [id])
  actu    Actu?    @relation(fields: [actuId], references: [id])
  actuId  Int
  postId  Int
  content String
  date    DateTime
}

model Post {
  id          Int           @id @default(autoincrement())
  title       String
  description String
  safe        Boolean
  date        DateTime
  toUpdate    Boolean       @default(false)
  content     String?
  published   Boolean       @default(false)
  section     PostSection[]
  slug        String
  category    Category?     @relation(fields: [categoryId], references: [id])
  categoryId  Int?
  visites     BigInt
  user        String? // If the post is from `Api` then require the user. the user is a sjon string data
  fromApi     Boolean       @default(false)
  Comment     Comment[]

  @@map("posts")
}

model GamerStat {
  id         Int       @id @default(autoincrement())
  ip         String
  url        String?   @unique
  gamingDay  DateTime
  game       GameData? @relation(fields: [gameId], references: [id])
  gameId     Int?
  gamerStats String
}

model GameData {
  id          Int         @id @default(autoincrement())
  gamers      GamerStat[]
  gameUrl     String
  title       String
  description String
  logo        String
  data        String? //json
}

model Project {
  id                Int    @id @default(autoincrement())
  title             String
  description       String
  github            String
  gitLab            String
  bitbucket         String
  license           String
  link              String
  participation     String
  participationType String
}

model GeneratorData {
  name  String  @id
  email String?
  url   String?
}

model Url {
  id    Int    @id @default(autoincrement())
  url   String @unique
  visit BigInt
  name  String
}

model Actu {
  id             Int       @id @default(autoincrement())
  file           String?
  content        String
  rawLink        String
  promoted       Boolean
  expirationDate DateTime?
  Comment        Comment[]
}

model User {
  id           Int      @id @default(autoincrement())
  name         String
  email        String   @unique
  password     String
  token        String
  registrtoken DateTime
  credits      BigInt?
}

model Assets {
  id      Int    @id @default(autoincrement())
  type    String @unique
  content String
  title   String
}
