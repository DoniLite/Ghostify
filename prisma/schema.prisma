// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Contact {
  id      Int     @id @default(autoincrement())
  email   String  @unique
  name    String?
  message String?
}

model Category {
  id    Int    @id @default(autoincrement())
  title String @unique
  keys  String
  post  Post[]
}

model PostSection {
  id      Int     @id @default(autoincrement())
  parent  Post    @relation(fields: [postId], references: [id])
  postId  Int
  title   String
  content String?
  indedx  Int
  header  Boolean @default(false)
  meta    String?
}

model Comment {
  id        Int       @id @default(autoincrement())
  post      Post?     @relation(fields: [postId], references: [id])
  actu      Actu?     @relation(fields: [actuId], references: [id])
  actuId    Int?
  file      String
  reactions String
  postId    Int?
  content   String
  comments  Comment[] @relation(name: "CommentToComment")
  date      DateTime
  comment   Comment?  @relation(name: "CommentToComment", fields: [commentId], references: [id])
  commentId Int?
  signaled  BigInt    @default(0)
}

model postFile {
  id        Int    @id @default(autoincrement())
  filePath  String
  sectionId Int
  filePost  Post   @relation(fields: [postId], references: [id])
  index     Int
  postId    Int
}

model Post {
  id          Int           @id @default(autoincrement())
  title       String
  description String
  safe        Boolean
  date        DateTime
  inMemory    Boolean       @default(true)
  toUpdate    Boolean       @default(false)
  content     String?
  published   Boolean       @default(false)
  section     PostSection[]
  slug        String?
  category    Category?     @relation(fields: [categoryId], references: [id])
  categoryId  Int?
  visites     BigInt        @default(0)
  user        String? // If the post is from `Api` then require the user. the user is a sjon string data
  fromApi     Boolean       @default(false)
  parser      String?
  Comment     Comment[]
  files       postFile[]
  index       Indexer?      @relation(fields: [indexerId], references: [id])
  indexerId   Int?
  indexed     Boolean       @default(false)

  @@map("posts")
}

model Indexer {
  id      Int        @id @default(autoincrement())
  keys    String
  postId  Int?
  type    String     @unique
  post    Post[]
  actu    Actu[]
  url     Url[]
  game    GameData[]
  Project Project[]
  Assets  Assets[]
}

model GamerStat {
  id         Int       @id @default(autoincrement())
  ip         String
  url        String?   @unique
  gamingDay  DateTime
  game       GameData? @relation(fields: [gameId], references: [id])
  gameId     Int?
  gamerStats String
}

model GameData {
  id          Int         @id @default(autoincrement())
  gamers      GamerStat[]
  gameUrl     String
  title       String
  description String
  indexed     Boolean     @default(true)
  logo        String
  data        String? //json
  Indexer     Indexer?    @relation(fields: [indexerId], references: [id])
  indexerId   Int?
}

model Project {
  id                Int      @id @default(autoincrement())
  title             String
  description       String
  github            String
  gitLab            String
  bitbucket         String
  indexed           Boolean  @default(true)
  license           String
  link              String
  participation     String
  participationType String
  indexer           Indexer? @relation(fields: [indexerId], references: [id])
  indexerId         Int?
}

model GeneratorData {
  name  String  @id
  email String?
  url   String?
}

model Url {
  id        Int      @id @default(autoincrement())
  url       String   @unique
  visit     BigInt   @default(0)
  name      String
  indexed   Boolean  @default(false)
  Indexer   Indexer? @relation(fields: [indexerId], references: [id])
  indexerId Int?
}

model Actu {
  id             Int       @id @default(autoincrement())
  file           String?
  content        String
  rawLink        String
  promoted       Boolean
  ip             String?
  expirationDate DateTime?
  comment        Comment[]
  safe           Boolean   @default(false)
  updated        Boolean   @default(false)
  indexed        Boolean   @default(false)
  signaled       Int       @default(0)
  visitors       BigInt    @default(0)
  url            String
  Indexer        Indexer?  @relation(fields: [indexerId], references: [id])
  indexerId      Int?
}

model User {
  id           Int       @id @default(autoincrement())
  name         String
  email        String    @unique
  password     String
  token        String
  service      String
  registration DateTime?
  credits      BigInt?
  meta         String?
}

model Assets {
  id        Int      @id @default(autoincrement())
  type      String   @unique
  content   String
  title     String
  indexed   Boolean  @default(false)
  Indexer   Indexer? @relation(fields: [indexerId], references: [id])
  indexerId Int?
}

model Admin {
  id         BigInt   @id @default(autoincrement())
  role       String
  login      String   @unique
  password   String
  token      String
  activities String?
  connection DateTime?
}
